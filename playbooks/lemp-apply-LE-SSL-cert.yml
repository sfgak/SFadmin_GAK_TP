---
   - hosts: all
     become: true
     become_method: sudo
     tasks:
             - name: "Remove file (delete file)"
               ansible.builtin.file:
                       path: /etc/nginx/sites-available/default
                       state: absent

             - name: "Create /etc/nginx/sites-available/default with a first line 'server { listen [::]:443 ssl ipv6only=on default_server; # managed by Certbot'"
               ansible.builtin.lineinfile:
                       path: /etc/nginx/sites-available/default
                       line: server { listen [::]:443 ssl ipv6only=on default_server; # managed by Certbot
                       create: yes

             - name: "Adding other content of the file /etc/nginx/sites-available/default"
               blockinfile:
                       path: /etc/nginx/sites-available/default
                       ### You can use your own marker if you want
                       #marker: "###"
                       insertafter: 'ipv6only=on'
                       state: present
                       block: |
                               listen 443 ssl default_server; # managed by Certbot
                               ssl_certificate /etc/letsencrypt/certs/fullchain_{{ domain_name }}; # managed by Certbot
                               ssl_certificate_key /etc/letsencrypt/keys/{{ domain_name }}.key; # managed by Certbot
                               location / { proxy_pass http://127.0.0.1:8080;
                                        proxy_set_header Host $host;
                                        proxy_set_header X-Real-IP $remote_addr;
                                        proxy_set_header X-Forwarded-Host $host;
                                        proxy_set_header X-Forwarded-Server $host;
                                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                                        proxy_set_header X-Forwarded-Proto $scheme;
                                        proxy_set_header X-Server-Address  $server_addr;
                                        } #return 404; # managed by Certbot
                                }
                                server { if ($host = www.{{ domain_name }}) { return 301 https://$host$request_uri; } # managed by Certbot
                                if ($host = {{ domain_name }}) { return 301 https://$host$request_uri; } # managed by Certbot
                                } #This is the end of the file

             - name: "Restarting nginx web-server to apply changes"
               systemd:
                       name: nginx
                       # Value of "state" must be one of: reloaded, restarted, started, stopped
                       state: restarted
